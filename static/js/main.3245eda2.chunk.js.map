{"version":3,"sources":["logo.svg","images/WX20190917-221410@2x.png","video/屏幕录制 2019-09-18 上午12.59.54.mov","images/WX20190918-005215@2x.png","video/屏幕录制 2019-09-18 上午12.50.16.mov","images/WX20190918-010527@2x.png","video/屏幕录制 2019-09-18 上午1.08.44.mov","images/WX20190918-011544@2x.png","video/photo_blog.mp4","components/Project-Card.jsx","components/media.js","components/Homepage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectCard","props","showModal","setState","visible","handleOk","e","refs","vidRef","pause","handleCancel","state","footer","title","this","onOk","onCancel","maskClosable","width","centered","ref","position","src","item","video","style","cover","alt","image","actions","onClick","window","open","url","type","description","Component","require","Content","Layout","Header","Footer","Homepage","className","padding","background","minHeight","marginTop","align","justify","cardPro","map","index","key","textAlign","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3245eda2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/WX20190917-221410@2x.f563b438.png\";","module.exports = __webpack_public_path__ + \"static/media/屏幕录制 2019-09-18 上午12.59.54.4bff0b5e.mov\";","module.exports = __webpack_public_path__ + \"static/media/WX20190918-005215@2x.0fa53d61.png\";","module.exports = __webpack_public_path__ + \"static/media/屏幕录制 2019-09-18 上午12.50.16.448fcce6.mov\";","module.exports = __webpack_public_path__ + \"static/media/WX20190918-010527@2x.75eb7c76.png\";","module.exports = __webpack_public_path__ + \"static/media/屏幕录制 2019-09-18 上午1.08.44.ddf597b6.mov\";","module.exports = __webpack_public_path__ + \"static/media/WX20190918-011544@2x.f334f793.png\";","module.exports = __webpack_public_path__ + \"static/media/photo_blog.5180c7eb.mp4\";","import React, { Component } from 'react';\n\nimport { Button, Layout, Menu, Breadcrumb, Row, Col, Card, Icon, Avatar, Modal } from 'antd'\nimport Meta from 'antd/lib/card/Meta';\nimport { Player, BigPlayButton } from 'video-react';\n\nclass ProjectCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        }\n    }\n    componentDidMount() {\n\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n\n        this.setState({\n            visible: false,\n        });\n        this.refs.vidRef.pause();\n    };\n\n    handleCancel = e => {\n\n        this.setState({\n            visible: false,\n        });\n        this.refs.vidRef.pause();\n    };\n    render() {\n        return (<Col >\n            <Modal\n            footer={null}\n                title=\"Demo\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                maskClosable={false}\n                width='70vw'\n                centered\n            >\n                <Player ref=\"vidRef\" >\n                    <BigPlayButton position=\"center\" />\n                    <source src={this.props.item.video} />\n                </Player>\n            </Modal>\n            <Card\n                style={{ width: 450 }}\n                cover={\n                    <img\n                        alt={this.props.item.title}\n                        src={this.props.item.image}\n                    />\n                }\n                actions={[\n                    <Icon onClick={() => { window.open(this.props.item.url) }} type=\"link\" />,\n                    <Icon onClick={this.showModal} type=\"play-circle\" />,\n                ]}\n            >\n                <Meta\n                    title={this.props.item.title}\n                    description={this.props.item.description}\n                />\n            </Card>,\n        </Col>);\n    }\n}\n\nexport default ProjectCard;","export default [\n  {\n    image: require(\"../images/WX20190917-221410@2x.png\"),\n    video: require(\"../video/屏幕录制 2019-09-18 上午12.59.54.mov\"||\"../video/屏幕录制 2019-02-13 上午11.26.33.mp4\"),\n    title: \"Image Gallery\",\n    description:\n      \"A website for users to upload and display images. Users first sign up/sign in and then they can upload images. The uploaded images are shown on the same webpage in masonries. Vue, Antd-Vue, Express.js, MongoDB are used to build this website. The website is deployed on AWS. \",\n    url: \"http://107.22.153.155:5000\"\n  },\n  {\n    image: require(\"../images/WX20190918-005215@2x.png\"),\n    video: require(\"../video/屏幕录制 2019-09-18 上午12.50.16.mov\"),\n    title: \"Auto-Completion\",\n    description:\n      \"A React auto-completion practice built from scratch.When you type in some words in the input box, some suggestion options will show up. You can either press Enter or click on the suggested options to select content. Space at the start and end will be removed. You may also add annotation such as number or string to the suggestion. Click on submit to see the result\",\n    url: \"https://github.com/Combo819/auto-completion\"\n  },\n\n  {\n    image: require(\"../images/WX20190918-010527@2x.png\"),\n    video: require(\"../video/屏幕录制 2019-09-18 上午1.08.44.mov\"),\n    title: \"Storyteller\",\n    description:\n      \"The webpage is to help people writing a letter or a short story. It is built with Vue. The webpage can play background music, show dialogue&image and a count down. Select Apirl 13 to get into\",\n    url: \"https://github.com/Combo819/letter_en\"\n  },\n  {\n    image: require(\"../images/WX20190918-011544@2x.png\"),\n    video: require(\"../video/photo_blog.mp4\"),\n    title: \"Photo Blog\",\n    description:\n      \"A photo blog exhibits my photograph works based on vanilla JavaScript. The webpage contains several tabs showing different content like image waterfall, articles, self-introduction, etc. The webpage is designed by myself and full of animation mainly based on CSS3.\",\n    url: \"https://combo819.github.io/myPhotoBlog/index.html\"\n  }\n];\n","import React, { Component } from 'react';\nimport { Button, Layout, Menu, Breadcrumb, Row, Col, Card, Icon, Avatar } from 'antd'\nimport Meta from 'antd/lib/card/Meta';\nimport ProjectCard from './Project-Card'\nimport cardPro from './media'\nconst { Header, Content, Footer } = Layout;\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (<Layout className=\"layout\">\n            <Content style={{ padding: '0 50px' }}>\n                <div style={{ background: '#fff', padding: 24, minHeight: '80vh', marginTop: '50px' }}>\n\n                    <Row type='flex' align='top' justify='space-around'>\n                        {cardPro.map((item,index)=><ProjectCard key={index} item={item} />)}\n                    </Row>\n\n                    {/*  <li><a href=\"https://combo819.github.io/myPhotoBlog/index.html\">myPhotoBlog</a></li>\n                       <li><a href=\"https://combo819.github.io/film_quiz/#/\">file quiz</a></li>\n                       <li><a href=\"https://combo819.github.io/letter_en/#/\">letter en, Select Apirl 14</a></li>\n                       <li><a href=\"http://107.22.153.155:5000\"> eat </a></li> */}\n\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>@kang</Footer>\n        </Layout>);\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './components/Homepage'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; \nimport 'video-react/dist/video-react.css'; \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}